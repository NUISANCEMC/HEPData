@PACKAGE_INIT@

if(TARGET NUISANCEHEPData::All)
  set(NUISANCEHEPData_FOUND TRUE)
  return()
endif()

set(NUISANCEHEPData_VERSION @PROJECT_VERSION@)

set(NUISANCEHEPData_CXX_STANDARD 17)

set(NUISANCEHEPData_FOUND TRUE)
include(${CMAKE_CURRENT_LIST_DIR}/NUISANCEHEPDataTargets.cmake)

if(NOT TARGET NUISANCEHEPData::All)
  set(NUISANCEHEPData_FOUND FALSE)
  return()
endif()

get_filename_component(NUISANCEHEPData_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
message(STATUS "Found NUISANCEHEPData Version: ${NUISANCEHEPData_VERSION} in \"${NUISANCEHEPData_CMAKE_DIR}\"")

find_path(NUISANCEHEPData_INCLUDE_DIR
  NAMES nuis/HEPData/HEPDataRecord.hxx
  PATHS ${NUISANCEHEPData_CMAKE_DIR}/../../../include/
)

find_path(NUISANCEHEPData_LIB_DIR
  NAMES libNUISANCEHEPData.so libNUISANCEHEPData.dylib
  PATHS ${NUISANCEHEPData_CMAKE_DIR}/../../
)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(NUISANCEHEPData
    REQUIRED_VARS 
      NUISANCEHEPData_INCLUDE_DIR 
      NUISANCEHEPData_LIB_DIR
    VERSION_VAR 
      NUISANCEHEPData_VERSION
)

message(STATUS "Found NUISANCEHEPData Version: ${NUISANCEHEPData_VERSION} in \"${NUISANCEHEPData_CMAKE_DIR}\"")
message(STATUS "    NUISANCEHEPData_CXX_STANDARD: ${NUISANCEHEPData_CXX_STANDARD}")
message(STATUS "    NUISANCEHEPData_INCLUDE_DIR: ${NUISANCEHEPData_INCLUDE_DIR}")
message(STATUS "    NUISANCEHEPData_LIB_DIR: ${NUISANCEHEPData_LIB_DIR}")

